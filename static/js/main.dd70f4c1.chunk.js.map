{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","props","onSubmit","reset","className","s","contact__form","input__form","this","htmlFor","input__title","type","pattern","title","required","input__name","onChange","input__number","btn__add","Component","Filter","filter","filter__container","filter__title","filter__input","ContactList","contacts","deleteContact","map","contact__item","item","onClick__btn","onClick","App","formSubmitHandler","data","some","elem","toLowerCase","alert","handleFilterChange","handleFilterContact","filterContact","includes","delContact","prevState","getContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd70f4c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"ContactForm_contact__form__EsFOx\",\"input__number\":\"ContactForm_input__number__5vJmE\",\"input__name\":\"ContactForm_input__name__2ovuN\",\"input__title\":\"ContactForm_input__title__3lRHV\",\"btn__add\":\"ContactForm_btn__add__3rVy7\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.props.onSubmit(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.contact__form}>\r\n        <form className={s.input__form} onSubmit={this.handleSubmit}>\r\n          <label htmlFor={this.nameInputId}>\r\n            <span className={s.input__title}>Name</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              className={s.input__name}\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n          <label htmlFor={this.numberInputId}>\r\n            <span className={s.input__title}>Number</span>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              className={s.input__number}\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n\r\n            <button type=\"submit\" className={s.btn__add}>\r\n              Add contact\r\n            </button>\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  handleChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  nameInputId: PropTypes.string,\r\n  numberInputId: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <div className={s.filter__container}>\r\n      <label className={s.filter__title}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filter__input}\r\n          type=\"text\"\r\n          value={filter}\r\n          name=\"name\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"contact-list\">\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li key={id} className={s.contact__item}>\r\n            <p className={s.item}>{name}:</p>\r\n            <p className={s.item}>{number}</p>\r\n            <button\r\n              key={id}\r\n              type=\"button\"\r\n              className={s.onClick__btn}\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\nimport './App.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const allReadyPresentContact = this.state.contacts.some(\n      elem => elem.name.toLowerCase() === data.name.toLowerCase(),\n    );\n\n    if (allReadyPresentContact) {\n      return alert(`${data.name} is already in contacts.`);\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [data, ...contacts],\n    }));\n  };\n\n  handleFilterChange = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  handleFilterContact = () => {\n    const { filter, contacts } = this.state;\n    const filterContact = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterContact),\n    );\n  };\n\n  delContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const { formSubmitHandler, handleFilterChange, delContact } = this;\n    const getContact = this.handleFilterContact();\n\n    return (\n      <div className=\"Container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={handleFilterChange} />\n        <ContactList contacts={getContact} deleteContact={delContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1bT_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__container\":\"Filter_filter__container__1NJjO\",\"filter__input\":\"Filter_filter__input__20JXL\"};"],"sourceRoot":""}